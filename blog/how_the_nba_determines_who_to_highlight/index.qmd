---
title: "How does the NBA choose which players they highlight?"
description: "On the NBA Youtube Page, the NBA selects one player from each team to \"highlight\" each game. I use perceptual hashing to match players onto their youtube highlights, and then model."
author: "Abhi Agarwal"
date: "2024-03-15"
categories: [python, nba]
freeze: true
filters:
  - optimize-images
draft: true
---

# The NBA's youtube highlights

The NBA, for years, has published highlight videos on their YouTube channel. Spurned by the popularity of channels such as "FreeDawkins", the NBA aims to satisfy the appetites of young people with short attention spans who can't be damned to watch the game.

Each highlight video thumbnail features one player from each team, the away team on the left and the home team on the right.

But how does the NBA choose who to highlight? Presumably, there's they look at the box scores and figure out who had the "best game". Said art is subjective by nature, and I'd imagine it's not an equal process, in that some players, due to their stature, may be highlighted more than they deserve.

In this project, I first create a dataset for these highlights by using image hashing techniques to match each highlight thumbnail to the player it's representing. I then construct a discrete choices hierarchical Bayesian model with a player fixed effect, to measure *how* the NBA chooses who to highlight.

# Downloading the data

```{python}
highlight_playlists = {
    "2020": "https://www.youtube.com/playlist?list=PLlVlyGVtvuVlr5GAksVQA37IE83MzRqln",
    "2021": "https://www.youtube.com/playlist?list=PLlVlyGVtvuVkIjURb-twQc1lsE4rT1wfJ",
    "2022": "https://www.youtube.com/playlist?list=PLlVlyGVtvuVm4_E_faSFuu3nU0F9O6XbR",
    "2023": "https://www.youtube.com/playlist?list=PLlVlyGVtvuVkAiuNG6gXxaUgjekofxxgs",
    "2024": "https://www.youtube.com/playlist?list=PLlVlyGVtvuVkxr3RnRwVqtuWR7BSBE0tD",
}
```

Using `pytube`, we can get every single video from this. Let's convert it into a `polars` dataframe.

```{python}
# import pytube
# import polars as pl

# all_videos = []
# for playlist_url in highlight_playlists.values():
#     videos = [video async for video in pytube.Playlist(playlist_url).videos()]
#     all_videos.append(videos)


# highlights_df = pl.DataFrame(all_videos, schema=["video_title", "video_id"])
# display(highlights_df)
```

# Scraping the headshots for all NBA players

The NBA makes it notoriously tricky to get headshots of old players. Twitter user [@NBA_University](https://twitter.com/NBA_University), who produces some awesome content, said he and his friends [figured out how to do this](https://twitter.com/NBA_University/status/1767927001661231222), but also said [he was gonna paywall it](https://twitter.com/NBA_University/status/1767948162746970497). Ok. I'm not gonna do that.

Anyways, if you google "nba player stats" for any player, let's say for my boy Derrick White, it'll take you to a page [like this](https://www.nba.com/player/1628401/derrick-white). The image attached leads you to `https://cdn.nba.com/headshots/nba/latest/1040x760/1628401.png`. Pretty easy to see that this is an CDN that takes their "player id" and returns their latest headshot. Unfortunately, manipulating the "latest" to let's say, a 2023, leads to an "access denied" error.

Thankfully, I found a loophole. If you append the player's team id, documented [here](https://github.com/bttmly/nba/blob/master/data/teams.json), and then replace `latest` with the targeted year, you can find the headshot for the particular year. Here is Derrick White's 2019 headshot. `https://cdn.nba.com/headshots/nba/1610612759/2019/1040x760/1628401.png`

The upside is that headshots are now segregated by the `team id`. So Derrick White, who was traded from the San Antonio Spurs to the Boston Celtics in Feburary 2022 (which I will look on back as one of the best days of my life), has two headshots for 2021 â€” the San Antonio Spurs one (`https://cdn.nba.com/headshots/nba/1610612759/2021/1040x760/1628401.png`), and the Boston Celtics one (`https://cdn.nba.com/headshots/nba/1610612738/2021/1040x760/1628401.png`).

I didn't store the headshots themselves in this repository, because it's a fuck-ton of space and also maybe illegal? No clue. But I did download a good chunk of them for this endeavor.
